/*
Wasp API

REST API for the Wasp node

API version: 0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the VMErrorCode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VMErrorCode{}

// VMErrorCode struct for VMErrorCode
type VMErrorCode struct {
	ContractID *int32 `json:"ContractID,omitempty"`
	ID *int32 `json:"ID,omitempty"`
}

// NewVMErrorCode instantiates a new VMErrorCode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVMErrorCode() *VMErrorCode {
	this := VMErrorCode{}
	return &this
}

// NewVMErrorCodeWithDefaults instantiates a new VMErrorCode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVMErrorCodeWithDefaults() *VMErrorCode {
	this := VMErrorCode{}
	return &this
}

// GetContractID returns the ContractID field value if set, zero value otherwise.
func (o *VMErrorCode) GetContractID() int32 {
	if o == nil || isNil(o.ContractID) {
		var ret int32
		return ret
	}
	return *o.ContractID
}

// GetContractIDOk returns a tuple with the ContractID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMErrorCode) GetContractIDOk() (*int32, bool) {
	if o == nil || isNil(o.ContractID) {
		return nil, false
	}
	return o.ContractID, true
}

// HasContractID returns a boolean if a field has been set.
func (o *VMErrorCode) HasContractID() bool {
	if o != nil && !isNil(o.ContractID) {
		return true
	}

	return false
}

// SetContractID gets a reference to the given int32 and assigns it to the ContractID field.
func (o *VMErrorCode) SetContractID(v int32) {
	o.ContractID = &v
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *VMErrorCode) GetID() int32 {
	if o == nil || isNil(o.ID) {
		var ret int32
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMErrorCode) GetIDOk() (*int32, bool) {
	if o == nil || isNil(o.ID) {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *VMErrorCode) HasID() bool {
	if o != nil && !isNil(o.ID) {
		return true
	}

	return false
}

// SetID gets a reference to the given int32 and assigns it to the ID field.
func (o *VMErrorCode) SetID(v int32) {
	o.ID = &v
}

func (o VMErrorCode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VMErrorCode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ContractID) {
		toSerialize["ContractID"] = o.ContractID
	}
	if !isNil(o.ID) {
		toSerialize["ID"] = o.ID
	}
	return toSerialize, nil
}

type NullableVMErrorCode struct {
	value *VMErrorCode
	isSet bool
}

func (v NullableVMErrorCode) Get() *VMErrorCode {
	return v.value
}

func (v *NullableVMErrorCode) Set(val *VMErrorCode) {
	v.value = val
	v.isSet = true
}

func (v NullableVMErrorCode) IsSet() bool {
	return v.isSet
}

func (v *NullableVMErrorCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVMErrorCode(val *VMErrorCode) *NullableVMErrorCode {
	return &NullableVMErrorCode{value: val, isSet: true}
}

func (v NullableVMErrorCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVMErrorCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


