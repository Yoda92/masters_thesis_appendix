/*
Wasp API

REST API for the Wasp node

API version: 0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the BlobListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlobListResponse{}

// BlobListResponse struct for BlobListResponse
type BlobListResponse struct {
	Blobs []Blob `json:"Blobs,omitempty"`
}

// NewBlobListResponse instantiates a new BlobListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlobListResponse() *BlobListResponse {
	this := BlobListResponse{}
	return &this
}

// NewBlobListResponseWithDefaults instantiates a new BlobListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlobListResponseWithDefaults() *BlobListResponse {
	this := BlobListResponse{}
	return &this
}

// GetBlobs returns the Blobs field value if set, zero value otherwise.
func (o *BlobListResponse) GetBlobs() []Blob {
	if o == nil || isNil(o.Blobs) {
		var ret []Blob
		return ret
	}
	return o.Blobs
}

// GetBlobsOk returns a tuple with the Blobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlobListResponse) GetBlobsOk() ([]Blob, bool) {
	if o == nil || isNil(o.Blobs) {
		return nil, false
	}
	return o.Blobs, true
}

// HasBlobs returns a boolean if a field has been set.
func (o *BlobListResponse) HasBlobs() bool {
	if o != nil && !isNil(o.Blobs) {
		return true
	}

	return false
}

// SetBlobs gets a reference to the given []Blob and assigns it to the Blobs field.
func (o *BlobListResponse) SetBlobs(v []Blob) {
	o.Blobs = v
}

func (o BlobListResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlobListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Blobs) {
		toSerialize["Blobs"] = o.Blobs
	}
	return toSerialize, nil
}

type NullableBlobListResponse struct {
	value *BlobListResponse
	isSet bool
}

func (v NullableBlobListResponse) Get() *BlobListResponse {
	return v.value
}

func (v *NullableBlobListResponse) Set(val *BlobListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBlobListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBlobListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlobListResponse(val *BlobListResponse) *NullableBlobListResponse {
	return &NullableBlobListResponse{value: val, isSet: true}
}

func (v NullableBlobListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlobListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


