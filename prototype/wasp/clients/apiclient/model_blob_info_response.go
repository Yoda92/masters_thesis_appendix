/*
Wasp API

REST API for the Wasp node

API version: 0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the BlobInfoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlobInfoResponse{}

// BlobInfoResponse struct for BlobInfoResponse
type BlobInfoResponse struct {
	Fields map[string]uint32 `json:"fields"`
}

// NewBlobInfoResponse instantiates a new BlobInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlobInfoResponse(fields map[string]uint32) *BlobInfoResponse {
	this := BlobInfoResponse{}
	this.Fields = fields
	return &this
}

// NewBlobInfoResponseWithDefaults instantiates a new BlobInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlobInfoResponseWithDefaults() *BlobInfoResponse {
	this := BlobInfoResponse{}
	return &this
}

// GetFields returns the Fields field value
func (o *BlobInfoResponse) GetFields() map[string]uint32 {
	if o == nil {
		var ret map[string]uint32
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
func (o *BlobInfoResponse) GetFieldsOk() (*map[string]uint32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fields, true
}

// SetFields sets field value
func (o *BlobInfoResponse) SetFields(v map[string]uint32) {
	o.Fields = v
}

func (o BlobInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlobInfoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fields"] = o.Fields
	return toSerialize, nil
}

type NullableBlobInfoResponse struct {
	value *BlobInfoResponse
	isSet bool
}

func (v NullableBlobInfoResponse) Get() *BlobInfoResponse {
	return v.value
}

func (v *NullableBlobInfoResponse) Set(val *BlobInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBlobInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBlobInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlobInfoResponse(val *BlobInfoResponse) *NullableBlobInfoResponse {
	return &NullableBlobInfoResponse{value: val, isSet: true}
}

func (v NullableBlobInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlobInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


