/*
Wasp API

REST API for the Wasp node

API version: 0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the AccountNonceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountNonceResponse{}

// AccountNonceResponse struct for AccountNonceResponse
type AccountNonceResponse struct {
	// The nonce (uint64 as string)
	Nonce string `json:"nonce"`
}

// NewAccountNonceResponse instantiates a new AccountNonceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountNonceResponse(nonce string) *AccountNonceResponse {
	this := AccountNonceResponse{}
	this.Nonce = nonce
	return &this
}

// NewAccountNonceResponseWithDefaults instantiates a new AccountNonceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountNonceResponseWithDefaults() *AccountNonceResponse {
	this := AccountNonceResponse{}
	return &this
}

// GetNonce returns the Nonce field value
func (o *AccountNonceResponse) GetNonce() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
func (o *AccountNonceResponse) GetNonceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nonce, true
}

// SetNonce sets field value
func (o *AccountNonceResponse) SetNonce(v string) {
	o.Nonce = v
}

func (o AccountNonceResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountNonceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nonce"] = o.Nonce
	return toSerialize, nil
}

type NullableAccountNonceResponse struct {
	value *AccountNonceResponse
	isSet bool
}

func (v NullableAccountNonceResponse) Get() *AccountNonceResponse {
	return v.value
}

func (v *NullableAccountNonceResponse) Set(val *AccountNonceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountNonceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountNonceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountNonceResponse(val *AccountNonceResponse) *NullableAccountNonceResponse {
	return &NullableAccountNonceResponse{value: val, isSet: true}
}

func (v NullableAccountNonceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountNonceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


