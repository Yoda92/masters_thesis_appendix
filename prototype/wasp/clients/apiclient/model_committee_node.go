/*
Wasp API

REST API for the Wasp node

API version: 0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the CommitteeNode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommitteeNode{}

// CommitteeNode struct for CommitteeNode
type CommitteeNode struct {
	AccessAPI string `json:"accessAPI"`
	Node PeeringNodeStatusResponse `json:"node"`
}

// NewCommitteeNode instantiates a new CommitteeNode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommitteeNode(accessAPI string, node PeeringNodeStatusResponse) *CommitteeNode {
	this := CommitteeNode{}
	this.AccessAPI = accessAPI
	this.Node = node
	return &this
}

// NewCommitteeNodeWithDefaults instantiates a new CommitteeNode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommitteeNodeWithDefaults() *CommitteeNode {
	this := CommitteeNode{}
	return &this
}

// GetAccessAPI returns the AccessAPI field value
func (o *CommitteeNode) GetAccessAPI() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessAPI
}

// GetAccessAPIOk returns a tuple with the AccessAPI field value
// and a boolean to check if the value has been set.
func (o *CommitteeNode) GetAccessAPIOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessAPI, true
}

// SetAccessAPI sets field value
func (o *CommitteeNode) SetAccessAPI(v string) {
	o.AccessAPI = v
}

// GetNode returns the Node field value
func (o *CommitteeNode) GetNode() PeeringNodeStatusResponse {
	if o == nil {
		var ret PeeringNodeStatusResponse
		return ret
	}

	return o.Node
}

// GetNodeOk returns a tuple with the Node field value
// and a boolean to check if the value has been set.
func (o *CommitteeNode) GetNodeOk() (*PeeringNodeStatusResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Node, true
}

// SetNode sets field value
func (o *CommitteeNode) SetNode(v PeeringNodeStatusResponse) {
	o.Node = v
}

func (o CommitteeNode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommitteeNode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accessAPI"] = o.AccessAPI
	toSerialize["node"] = o.Node
	return toSerialize, nil
}

type NullableCommitteeNode struct {
	value *CommitteeNode
	isSet bool
}

func (v NullableCommitteeNode) Get() *CommitteeNode {
	return v.value
}

func (v *NullableCommitteeNode) Set(val *CommitteeNode) {
	v.value = val
	v.isSet = true
}

func (v NullableCommitteeNode) IsSet() bool {
	return v.isSet
}

func (v *NullableCommitteeNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommitteeNode(val *CommitteeNode) *NullableCommitteeNode {
	return &NullableCommitteeNode{value: val, isSet: true}
}

func (v NullableCommitteeNode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommitteeNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


