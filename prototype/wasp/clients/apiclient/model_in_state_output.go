/*
Wasp API

REST API for the Wasp node

API version: 0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the InStateOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InStateOutput{}

// InStateOutput struct for InStateOutput
type InStateOutput struct {
	Output Output `json:"output"`
	// The output ID
	OutputId string `json:"outputId"`
}

// NewInStateOutput instantiates a new InStateOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInStateOutput(output Output, outputId string) *InStateOutput {
	this := InStateOutput{}
	this.Output = output
	this.OutputId = outputId
	return &this
}

// NewInStateOutputWithDefaults instantiates a new InStateOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInStateOutputWithDefaults() *InStateOutput {
	this := InStateOutput{}
	return &this
}

// GetOutput returns the Output field value
func (o *InStateOutput) GetOutput() Output {
	if o == nil {
		var ret Output
		return ret
	}

	return o.Output
}

// GetOutputOk returns a tuple with the Output field value
// and a boolean to check if the value has been set.
func (o *InStateOutput) GetOutputOk() (*Output, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Output, true
}

// SetOutput sets field value
func (o *InStateOutput) SetOutput(v Output) {
	o.Output = v
}

// GetOutputId returns the OutputId field value
func (o *InStateOutput) GetOutputId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OutputId
}

// GetOutputIdOk returns a tuple with the OutputId field value
// and a boolean to check if the value has been set.
func (o *InStateOutput) GetOutputIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputId, true
}

// SetOutputId sets field value
func (o *InStateOutput) SetOutputId(v string) {
	o.OutputId = v
}

func (o InStateOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InStateOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["output"] = o.Output
	toSerialize["outputId"] = o.OutputId
	return toSerialize, nil
}

type NullableInStateOutput struct {
	value *InStateOutput
	isSet bool
}

func (v NullableInStateOutput) Get() *InStateOutput {
	return v.value
}

func (v *NullableInStateOutput) Set(val *InStateOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableInStateOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableInStateOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInStateOutput(val *InStateOutput) *NullableInStateOutput {
	return &NullableInStateOutput{value: val, isSet: true}
}

func (v NullableInStateOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInStateOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


