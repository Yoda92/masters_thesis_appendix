/*
Wasp API

REST API for the Wasp node

API version: 0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the RequestReceiptResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestReceiptResponse{}

// RequestReceiptResponse struct for RequestReceiptResponse
type RequestReceiptResponse struct {
	BlockIndex uint32 `json:"blockIndex"`
	Error *BlockReceiptError `json:"error,omitempty"`
	// The gas budget (uint64 as string)
	GasBudget string `json:"gasBudget"`
	GasBurnLog BurnLog `json:"gasBurnLog"`
	// The burned gas (uint64 as string)
	GasBurned string `json:"gasBurned"`
	// The charged gas fee (uint64 as string)
	GasFeeCharged string `json:"gasFeeCharged"`
	Request RequestDetail `json:"request"`
	RequestIndex uint32 `json:"requestIndex"`
}

// NewRequestReceiptResponse instantiates a new RequestReceiptResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestReceiptResponse(blockIndex uint32, gasBudget string, gasBurnLog BurnLog, gasBurned string, gasFeeCharged string, request RequestDetail, requestIndex uint32) *RequestReceiptResponse {
	this := RequestReceiptResponse{}
	this.BlockIndex = blockIndex
	this.GasBudget = gasBudget
	this.GasBurnLog = gasBurnLog
	this.GasBurned = gasBurned
	this.GasFeeCharged = gasFeeCharged
	this.Request = request
	this.RequestIndex = requestIndex
	return &this
}

// NewRequestReceiptResponseWithDefaults instantiates a new RequestReceiptResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestReceiptResponseWithDefaults() *RequestReceiptResponse {
	this := RequestReceiptResponse{}
	return &this
}

// GetBlockIndex returns the BlockIndex field value
func (o *RequestReceiptResponse) GetBlockIndex() uint32 {
	if o == nil {
		var ret uint32
		return ret
	}

	return o.BlockIndex
}

// GetBlockIndexOk returns a tuple with the BlockIndex field value
// and a boolean to check if the value has been set.
func (o *RequestReceiptResponse) GetBlockIndexOk() (*uint32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockIndex, true
}

// SetBlockIndex sets field value
func (o *RequestReceiptResponse) SetBlockIndex(v uint32) {
	o.BlockIndex = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *RequestReceiptResponse) GetError() BlockReceiptError {
	if o == nil || isNil(o.Error) {
		var ret BlockReceiptError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestReceiptResponse) GetErrorOk() (*BlockReceiptError, bool) {
	if o == nil || isNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *RequestReceiptResponse) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given BlockReceiptError and assigns it to the Error field.
func (o *RequestReceiptResponse) SetError(v BlockReceiptError) {
	o.Error = &v
}

// GetGasBudget returns the GasBudget field value
func (o *RequestReceiptResponse) GetGasBudget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasBudget
}

// GetGasBudgetOk returns a tuple with the GasBudget field value
// and a boolean to check if the value has been set.
func (o *RequestReceiptResponse) GetGasBudgetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasBudget, true
}

// SetGasBudget sets field value
func (o *RequestReceiptResponse) SetGasBudget(v string) {
	o.GasBudget = v
}

// GetGasBurnLog returns the GasBurnLog field value
func (o *RequestReceiptResponse) GetGasBurnLog() BurnLog {
	if o == nil {
		var ret BurnLog
		return ret
	}

	return o.GasBurnLog
}

// GetGasBurnLogOk returns a tuple with the GasBurnLog field value
// and a boolean to check if the value has been set.
func (o *RequestReceiptResponse) GetGasBurnLogOk() (*BurnLog, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasBurnLog, true
}

// SetGasBurnLog sets field value
func (o *RequestReceiptResponse) SetGasBurnLog(v BurnLog) {
	o.GasBurnLog = v
}

// GetGasBurned returns the GasBurned field value
func (o *RequestReceiptResponse) GetGasBurned() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasBurned
}

// GetGasBurnedOk returns a tuple with the GasBurned field value
// and a boolean to check if the value has been set.
func (o *RequestReceiptResponse) GetGasBurnedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasBurned, true
}

// SetGasBurned sets field value
func (o *RequestReceiptResponse) SetGasBurned(v string) {
	o.GasBurned = v
}

// GetGasFeeCharged returns the GasFeeCharged field value
func (o *RequestReceiptResponse) GetGasFeeCharged() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasFeeCharged
}

// GetGasFeeChargedOk returns a tuple with the GasFeeCharged field value
// and a boolean to check if the value has been set.
func (o *RequestReceiptResponse) GetGasFeeChargedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasFeeCharged, true
}

// SetGasFeeCharged sets field value
func (o *RequestReceiptResponse) SetGasFeeCharged(v string) {
	o.GasFeeCharged = v
}

// GetRequest returns the Request field value
func (o *RequestReceiptResponse) GetRequest() RequestDetail {
	if o == nil {
		var ret RequestDetail
		return ret
	}

	return o.Request
}

// GetRequestOk returns a tuple with the Request field value
// and a boolean to check if the value has been set.
func (o *RequestReceiptResponse) GetRequestOk() (*RequestDetail, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Request, true
}

// SetRequest sets field value
func (o *RequestReceiptResponse) SetRequest(v RequestDetail) {
	o.Request = v
}

// GetRequestIndex returns the RequestIndex field value
func (o *RequestReceiptResponse) GetRequestIndex() uint32 {
	if o == nil {
		var ret uint32
		return ret
	}

	return o.RequestIndex
}

// GetRequestIndexOk returns a tuple with the RequestIndex field value
// and a boolean to check if the value has been set.
func (o *RequestReceiptResponse) GetRequestIndexOk() (*uint32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestIndex, true
}

// SetRequestIndex sets field value
func (o *RequestReceiptResponse) SetRequestIndex(v uint32) {
	o.RequestIndex = v
}

func (o RequestReceiptResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestReceiptResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["blockIndex"] = o.BlockIndex
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	toSerialize["gasBudget"] = o.GasBudget
	toSerialize["gasBurnLog"] = o.GasBurnLog
	toSerialize["gasBurned"] = o.GasBurned
	toSerialize["gasFeeCharged"] = o.GasFeeCharged
	toSerialize["request"] = o.Request
	toSerialize["requestIndex"] = o.RequestIndex
	return toSerialize, nil
}

type NullableRequestReceiptResponse struct {
	value *RequestReceiptResponse
	isSet bool
}

func (v NullableRequestReceiptResponse) Get() *RequestReceiptResponse {
	return v.value
}

func (v *NullableRequestReceiptResponse) Set(val *RequestReceiptResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestReceiptResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestReceiptResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestReceiptResponse(val *RequestReceiptResponse) *NullableRequestReceiptResponse {
	return &NullableRequestReceiptResponse{value: val, isSet: true}
}

func (v NullableRequestReceiptResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestReceiptResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


