// Code generated by schema tool; DO NOT EDIT.

// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

import * as wasmtypes from '../wasmtypes';

export class PublicChainMetadata {
    description     : string = '';
    evmJsonRPCURL   : string = '';
    evmWebSocketURL : string = '';
    name            : string = '';
    website         : string = '';

    static fromBytes(buf: Uint8Array): PublicChainMetadata {
        const dec = new wasmtypes.WasmDecoder(buf);
        const data = new PublicChainMetadata();
        data.description     = wasmtypes.stringDecode(dec);
        data.evmJsonRPCURL   = wasmtypes.stringDecode(dec);
        data.evmWebSocketURL = wasmtypes.stringDecode(dec);
        data.name            = wasmtypes.stringDecode(dec);
        data.website         = wasmtypes.stringDecode(dec);
        dec.close();
        return data;
    }

    bytes(): Uint8Array {
        const enc = new wasmtypes.WasmEncoder();
        wasmtypes.stringEncode(enc, this.description);
        wasmtypes.stringEncode(enc, this.evmJsonRPCURL);
        wasmtypes.stringEncode(enc, this.evmWebSocketURL);
        wasmtypes.stringEncode(enc, this.name);
        wasmtypes.stringEncode(enc, this.website);
        return enc.buf();
    }
}

export class ImmutablePublicChainMetadata extends wasmtypes.ScProxy {

    exists(): bool {
        return this.proxy.exists();
    }

    value(): PublicChainMetadata {
        return PublicChainMetadata.fromBytes(this.proxy.get());
    }
}

export class MutablePublicChainMetadata extends wasmtypes.ScProxy {

    delete(): void {
        this.proxy.delete();
    }

    exists(): bool {
        return this.proxy.exists();
    }

    setValue(value: PublicChainMetadata): void {
        this.proxy.set(value.bytes());
    }

    value(): PublicChainMetadata {
        return PublicChainMetadata.fromBytes(this.proxy.get());
    }
}
