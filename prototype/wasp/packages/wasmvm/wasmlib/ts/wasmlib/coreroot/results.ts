// Code generated by schema tool; DO NOT EDIT.

// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

import * as wasmtypes from '../wasmtypes';
import * as sc from './index';

export class ImmutableFindContractResults extends wasmtypes.ScProxy {
    // whether the contract exists.
    contractFound(): wasmtypes.ScImmutableBool {
        return new wasmtypes.ScImmutableBool(this.proxy.root(sc.ResultContractFound));
    }

    // encoded contract record (if exists)
    contractRecData(): wasmtypes.ScImmutableBytes {
        return new wasmtypes.ScImmutableBytes(this.proxy.root(sc.ResultContractRecData));
    }
}

export class MutableFindContractResults extends wasmtypes.ScProxy {
    // whether the contract exists.
    contractFound(): wasmtypes.ScMutableBool {
        return new wasmtypes.ScMutableBool(this.proxy.root(sc.ResultContractFound));
    }

    // encoded contract record (if exists)
    contractRecData(): wasmtypes.ScMutableBytes {
        return new wasmtypes.ScMutableBytes(this.proxy.root(sc.ResultContractRecData));
    }
}

export class MapHnameToImmutableBytes extends wasmtypes.ScProxy {

    getBytes(key: wasmtypes.ScHname): wasmtypes.ScImmutableBytes {
        return new wasmtypes.ScImmutableBytes(this.proxy.key(wasmtypes.hnameToBytes(key)));
    }
}

export class ImmutableGetContractRecordsResults extends wasmtypes.ScProxy {
    // contract records by Hname
    contractRegistry(): sc.MapHnameToImmutableBytes {
        return new sc.MapHnameToImmutableBytes(this.proxy.root(sc.ResultContractRegistry));
    }
}

export class MapHnameToMutableBytes extends wasmtypes.ScProxy {

    clear(): void {
        this.proxy.clearMap();
    }

    getBytes(key: wasmtypes.ScHname): wasmtypes.ScMutableBytes {
        return new wasmtypes.ScMutableBytes(this.proxy.key(wasmtypes.hnameToBytes(key)));
    }
}

export class MutableGetContractRecordsResults extends wasmtypes.ScProxy {
    // contract records by Hname
    contractRegistry(): sc.MapHnameToMutableBytes {
        return new sc.MapHnameToMutableBytes(this.proxy.root(sc.ResultContractRegistry));
    }
}
