// Code generated by schema tool; DO NOT EDIT.

// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

import * as wasmtypes from '../wasmtypes';
import * as sc from './index';

export class ImmutableControlAddressesResults extends wasmtypes.ScProxy {
    // index of block where the addresses were set
    blockIndex(): wasmtypes.ScImmutableUint32 {
        return new wasmtypes.ScImmutableUint32(this.proxy.root(sc.ResultBlockIndex));
    }

    // governing address
    governingAddress(): wasmtypes.ScImmutableAddress {
        return new wasmtypes.ScImmutableAddress(this.proxy.root(sc.ResultGoverningAddress));
    }

    // state controller address
    stateControllerAddress(): wasmtypes.ScImmutableAddress {
        return new wasmtypes.ScImmutableAddress(this.proxy.root(sc.ResultStateControllerAddress));
    }
}

export class MutableControlAddressesResults extends wasmtypes.ScProxy {
    // index of block where the addresses were set
    blockIndex(): wasmtypes.ScMutableUint32 {
        return new wasmtypes.ScMutableUint32(this.proxy.root(sc.ResultBlockIndex));
    }

    // governing address
    governingAddress(): wasmtypes.ScMutableAddress {
        return new wasmtypes.ScMutableAddress(this.proxy.root(sc.ResultGoverningAddress));
    }

    // state controller address
    stateControllerAddress(): wasmtypes.ScMutableAddress {
        return new wasmtypes.ScMutableAddress(this.proxy.root(sc.ResultStateControllerAddress));
    }
}

export class ImmutableGetBlockInfoResults extends wasmtypes.ScProxy {
    // index of returned block
    blockIndex(): wasmtypes.ScImmutableUint32 {
        return new wasmtypes.ScImmutableUint32(this.proxy.root(sc.ResultBlockIndex));
    }

    // serialized block info
    blockInfo(): wasmtypes.ScImmutableBytes {
        return new wasmtypes.ScImmutableBytes(this.proxy.root(sc.ResultBlockInfo));
    }
}

export class MutableGetBlockInfoResults extends wasmtypes.ScProxy {
    // index of returned block
    blockIndex(): wasmtypes.ScMutableUint32 {
        return new wasmtypes.ScMutableUint32(this.proxy.root(sc.ResultBlockIndex));
    }

    // serialized block info
    blockInfo(): wasmtypes.ScMutableBytes {
        return new wasmtypes.ScMutableBytes(this.proxy.root(sc.ResultBlockInfo));
    }
}

export class ArrayOfImmutableBytes extends wasmtypes.ScProxy {

    length(): u32 {
        return this.proxy.length();
    }

    getBytes(index: u32): wasmtypes.ScImmutableBytes {
        return new wasmtypes.ScImmutableBytes(this.proxy.index(index));
    }
}

export class ImmutableGetEventsForBlockResults extends wasmtypes.ScProxy {
    // Array of serialized events
    event(): sc.ArrayOfImmutableBytes {
        return new sc.ArrayOfImmutableBytes(this.proxy.root(sc.ResultEvent));
    }
}

export class ArrayOfMutableBytes extends wasmtypes.ScProxy {

    appendBytes(): wasmtypes.ScMutableBytes {
        return new wasmtypes.ScMutableBytes(this.proxy.append());
    }

    clear(): void {
        this.proxy.clearArray();
    }

    length(): u32 {
        return this.proxy.length();
    }

    getBytes(index: u32): wasmtypes.ScMutableBytes {
        return new wasmtypes.ScMutableBytes(this.proxy.index(index));
    }
}

export class MutableGetEventsForBlockResults extends wasmtypes.ScProxy {
    // Array of serialized events
    event(): sc.ArrayOfMutableBytes {
        return new sc.ArrayOfMutableBytes(this.proxy.root(sc.ResultEvent));
    }
}

export class ImmutableGetEventsForContractResults extends wasmtypes.ScProxy {
    // Array of serialized events
    event(): sc.ArrayOfImmutableBytes {
        return new sc.ArrayOfImmutableBytes(this.proxy.root(sc.ResultEvent));
    }
}

export class MutableGetEventsForContractResults extends wasmtypes.ScProxy {
    // Array of serialized events
    event(): sc.ArrayOfMutableBytes {
        return new sc.ArrayOfMutableBytes(this.proxy.root(sc.ResultEvent));
    }
}

export class ImmutableGetEventsForRequestResults extends wasmtypes.ScProxy {
    // Array of serialized events
    event(): sc.ArrayOfImmutableBytes {
        return new sc.ArrayOfImmutableBytes(this.proxy.root(sc.ResultEvent));
    }
}

export class MutableGetEventsForRequestResults extends wasmtypes.ScProxy {
    // Array of serialized events
    event(): sc.ArrayOfMutableBytes {
        return new sc.ArrayOfMutableBytes(this.proxy.root(sc.ResultEvent));
    }
}

export class ArrayOfImmutableRequestID extends wasmtypes.ScProxy {

    length(): u32 {
        return this.proxy.length();
    }

    getRequestID(index: u32): wasmtypes.ScImmutableRequestID {
        return new wasmtypes.ScImmutableRequestID(this.proxy.index(index));
    }
}

export class ImmutableGetRequestIDsForBlockResults extends wasmtypes.ScProxy {
    // index of block containing request
    blockIndex(): wasmtypes.ScImmutableUint32 {
        return new wasmtypes.ScImmutableUint32(this.proxy.root(sc.ResultBlockIndex));
    }

    // Array of request IDs
    requestID(): sc.ArrayOfImmutableRequestID {
        return new sc.ArrayOfImmutableRequestID(this.proxy.root(sc.ResultRequestID));
    }
}

export class ArrayOfMutableRequestID extends wasmtypes.ScProxy {

    appendRequestID(): wasmtypes.ScMutableRequestID {
        return new wasmtypes.ScMutableRequestID(this.proxy.append());
    }

    clear(): void {
        this.proxy.clearArray();
    }

    length(): u32 {
        return this.proxy.length();
    }

    getRequestID(index: u32): wasmtypes.ScMutableRequestID {
        return new wasmtypes.ScMutableRequestID(this.proxy.index(index));
    }
}

export class MutableGetRequestIDsForBlockResults extends wasmtypes.ScProxy {
    // index of block containing request
    blockIndex(): wasmtypes.ScMutableUint32 {
        return new wasmtypes.ScMutableUint32(this.proxy.root(sc.ResultBlockIndex));
    }

    // Array of request IDs
    requestID(): sc.ArrayOfMutableRequestID {
        return new sc.ArrayOfMutableRequestID(this.proxy.root(sc.ResultRequestID));
    }
}

export class ImmutableGetRequestReceiptResults extends wasmtypes.ScProxy {
    // index of block containing request
    blockIndex(): wasmtypes.ScImmutableUint32 {
        return new wasmtypes.ScImmutableUint32(this.proxy.root(sc.ResultBlockIndex));
    }

    // index within block containing request
    requestIndex(): wasmtypes.ScImmutableUint16 {
        return new wasmtypes.ScImmutableUint16(this.proxy.root(sc.ResultRequestIndex));
    }

    // serialized request receipt
    requestReceipt(): wasmtypes.ScImmutableBytes {
        return new wasmtypes.ScImmutableBytes(this.proxy.root(sc.ResultRequestReceipt));
    }
}

export class MutableGetRequestReceiptResults extends wasmtypes.ScProxy {
    // index of block containing request
    blockIndex(): wasmtypes.ScMutableUint32 {
        return new wasmtypes.ScMutableUint32(this.proxy.root(sc.ResultBlockIndex));
    }

    // index within block containing request
    requestIndex(): wasmtypes.ScMutableUint16 {
        return new wasmtypes.ScMutableUint16(this.proxy.root(sc.ResultRequestIndex));
    }

    // serialized request receipt
    requestReceipt(): wasmtypes.ScMutableBytes {
        return new wasmtypes.ScMutableBytes(this.proxy.root(sc.ResultRequestReceipt));
    }
}

export class ImmutableGetRequestReceiptsForBlockResults extends wasmtypes.ScProxy {
    // index of block containing request
    blockIndex(): wasmtypes.ScImmutableUint32 {
        return new wasmtypes.ScImmutableUint32(this.proxy.root(sc.ResultBlockIndex));
    }

    // Array of request receipts
    requestReceipts(): sc.ArrayOfImmutableBytes {
        return new sc.ArrayOfImmutableBytes(this.proxy.root(sc.ResultRequestReceipts));
    }
}

export class MutableGetRequestReceiptsForBlockResults extends wasmtypes.ScProxy {
    // index of block containing request
    blockIndex(): wasmtypes.ScMutableUint32 {
        return new wasmtypes.ScMutableUint32(this.proxy.root(sc.ResultBlockIndex));
    }

    // Array of request receipts
    requestReceipts(): sc.ArrayOfMutableBytes {
        return new sc.ArrayOfMutableBytes(this.proxy.root(sc.ResultRequestReceipts));
    }
}

export class ImmutableIsRequestProcessedResults extends wasmtypes.ScProxy {
    // whether request has been processed
    requestProcessed(): wasmtypes.ScImmutableBool {
        return new wasmtypes.ScImmutableBool(this.proxy.root(sc.ResultRequestProcessed));
    }
}

export class MutableIsRequestProcessedResults extends wasmtypes.ScProxy {
    // whether request has been processed
    requestProcessed(): wasmtypes.ScMutableBool {
        return new wasmtypes.ScMutableBool(this.proxy.root(sc.ResultRequestProcessed));
    }
}
